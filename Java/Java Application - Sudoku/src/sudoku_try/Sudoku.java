/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudoku_try;
import java.awt.Color;
import java.awt.Font; 
import javax.swing.JOptionPane;
import java.util.Random;
/**
 *
 * @author Ramesh
 */
public final class Sudoku extends javax.swing.JFrame {

    static int[][] sudoku = new int[9][9];
    /**
     * Creates new form NewJFrame
     */
    public Sudoku() {
        initComponents();
        noEnterValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        r1c1 = new javax.swing.JTextField();
        r1c3 = new javax.swing.JTextField();
        r1c2 = new javax.swing.JTextField();
        r1c6 = new javax.swing.JTextField();
        r1c4 = new javax.swing.JTextField();
        r1c5 = new javax.swing.JTextField();
        r1c8 = new javax.swing.JTextField();
        r1c7 = new javax.swing.JTextField();
        r1c9 = new javax.swing.JTextField();
        r2c3 = new javax.swing.JTextField();
        r2c1 = new javax.swing.JTextField();
        r2c5 = new javax.swing.JTextField();
        r2c4 = new javax.swing.JTextField();
        r2c6 = new javax.swing.JTextField();
        r2c2 = new javax.swing.JTextField();
        r2c7 = new javax.swing.JTextField();
        r2c8 = new javax.swing.JTextField();
        r2c9 = new javax.swing.JTextField();
        r4c3 = new javax.swing.JTextField();
        r4c4 = new javax.swing.JTextField();
        r4c6 = new javax.swing.JTextField();
        r4c1 = new javax.swing.JTextField();
        r4c5 = new javax.swing.JTextField();
        r3c3 = new javax.swing.JTextField();
        r3c1 = new javax.swing.JTextField();
        r3c5 = new javax.swing.JTextField();
        r3c4 = new javax.swing.JTextField();
        r3c6 = new javax.swing.JTextField();
        r3c2 = new javax.swing.JTextField();
        r3c7 = new javax.swing.JTextField();
        r3c8 = new javax.swing.JTextField();
        r4c9 = new javax.swing.JTextField();
        r4c8 = new javax.swing.JTextField();
        r3c9 = new javax.swing.JTextField();
        r4c2 = new javax.swing.JTextField();
        r4c7 = new javax.swing.JTextField();
        r6c3 = new javax.swing.JTextField();
        r6c4 = new javax.swing.JTextField();
        r6c6 = new javax.swing.JTextField();
        r6c1 = new javax.swing.JTextField();
        r6c5 = new javax.swing.JTextField();
        r5c3 = new javax.swing.JTextField();
        r5c1 = new javax.swing.JTextField();
        r5c5 = new javax.swing.JTextField();
        r5c4 = new javax.swing.JTextField();
        r5c6 = new javax.swing.JTextField();
        r5c2 = new javax.swing.JTextField();
        r5c7 = new javax.swing.JTextField();
        r5c8 = new javax.swing.JTextField();
        r8c7 = new javax.swing.JTextField();
        r8c2 = new javax.swing.JTextField();
        r7c9 = new javax.swing.JTextField();
        r8c8 = new javax.swing.JTextField();
        r8c9 = new javax.swing.JTextField();
        r7c8 = new javax.swing.JTextField();
        r7c7 = new javax.swing.JTextField();
        r7c2 = new javax.swing.JTextField();
        r7c5 = new javax.swing.JTextField();
        r7c6 = new javax.swing.JTextField();
        r7c4 = new javax.swing.JTextField();
        r7c1 = new javax.swing.JTextField();
        r7c3 = new javax.swing.JTextField();
        r8c5 = new javax.swing.JTextField();
        r8c1 = new javax.swing.JTextField();
        r8c6 = new javax.swing.JTextField();
        r8c4 = new javax.swing.JTextField();
        r8c3 = new javax.swing.JTextField();
        r6c9 = new javax.swing.JTextField();
        r6c8 = new javax.swing.JTextField();
        r5c9 = new javax.swing.JTextField();
        r6c2 = new javax.swing.JTextField();
        r6c7 = new javax.swing.JTextField();
        r9c8 = new javax.swing.JTextField();
        r9c9 = new javax.swing.JTextField();
        r9c7 = new javax.swing.JTextField();
        r9c2 = new javax.swing.JTextField();
        r9c6 = new javax.swing.JTextField();
        r9c4 = new javax.swing.JTextField();
        r9c5 = new javax.swing.JTextField();
        r9c1 = new javax.swing.JTextField();
        r9c3 = new javax.swing.JTextField();
        sbmtBtn = new javax.swing.JButton();
        QuitBtn = new javax.swing.JButton();
        rstrtBtn = new javax.swing.JButton();
        WelcomeText = new javax.swing.JLabel();
        results = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        r1c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c1FocusLost(evt);
            }
        });

        r1c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c2FocusLost(evt);
            }
        });

        r1c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c3FocusLost(evt);
            }
        });

        r1c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c6FocusLost(evt);
            }
        });

        r1c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c4FocusLost(evt);
            }
        });

        r1c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c5FocusLost(evt);
            }
        });

        r1c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c8FocusLost(evt);
            }
        });

        r1c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c7FocusLost(evt);
            }
        });

        r1c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r1c9FocusLost(evt);
            }
        });

        r2c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c3FocusLost(evt);
            }
        });

        r2c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c1FocusLost(evt);
            }
        });

        r2c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c5FocusLost(evt);
            }
        });

        r2c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c4FocusLost(evt);
            }
        });

        r2c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c6FocusLost(evt);
            }
        });

        r2c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c2FocusLost(evt);
            }
        });

        r2c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c7FocusLost(evt);
            }
        });

        r2c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c8FocusLost(evt);
            }
        });

        r2c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r2c9FocusLost(evt);
            }
        });

        r4c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c3FocusLost(evt);
            }
        });

        r4c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c4FocusLost(evt);
            }
        });

        r4c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c6FocusLost(evt);
            }
        });

        r4c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c1FocusLost(evt);
            }
        });

        r4c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c5FocusLost(evt);
            }
        });

        r3c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c3FocusLost(evt);
            }
        });

        r3c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c1FocusLost(evt);
            }
        });

        r3c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c5FocusLost(evt);
            }
        });

        r3c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c4FocusLost(evt);
            }
        });

        r3c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c6FocusLost(evt);
            }
        });

        r3c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c2FocusLost(evt);
            }
        });

        r3c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c7FocusLost(evt);
            }
        });

        r3c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c8FocusLost(evt);
            }
        });

        r4c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c9FocusLost(evt);
            }
        });

        r4c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c8FocusLost(evt);
            }
        });

        r3c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r3c9FocusLost(evt);
            }
        });

        r4c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c2FocusLost(evt);
            }
        });

        r4c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r4c7FocusLost(evt);
            }
        });

        r6c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c3FocusLost(evt);
            }
        });

        r6c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c4FocusLost(evt);
            }
        });

        r6c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c6FocusLost(evt);
            }
        });

        r6c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c1FocusLost(evt);
            }
        });

        r6c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c5FocusLost(evt);
            }
        });

        r5c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c3FocusLost(evt);
            }
        });

        r5c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c1FocusLost(evt);
            }
        });

        r5c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c5FocusLost(evt);
            }
        });

        r5c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c4FocusLost(evt);
            }
        });

        r5c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c6FocusLost(evt);
            }
        });

        r5c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c2FocusLost(evt);
            }
        });

        r5c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c7FocusLost(evt);
            }
        });

        r5c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c8FocusLost(evt);
            }
        });

        r8c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c7FocusLost(evt);
            }
        });

        r8c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c2FocusLost(evt);
            }
        });

        r7c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c9FocusLost(evt);
            }
        });

        r8c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c8FocusLost(evt);
            }
        });

        r8c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c9FocusLost(evt);
            }
        });

        r7c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c8FocusLost(evt);
            }
        });

        r7c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c7FocusLost(evt);
            }
        });

        r7c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c2FocusLost(evt);
            }
        });

        r7c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c5FocusLost(evt);
            }
        });

        r7c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c6FocusLost(evt);
            }
        });

        r7c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c4FocusLost(evt);
            }
        });

        r7c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c1FocusLost(evt);
            }
        });

        r7c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r7c3FocusLost(evt);
            }
        });

        r8c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c5FocusLost(evt);
            }
        });

        r8c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c1FocusLost(evt);
            }
        });

        r8c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c6FocusLost(evt);
            }
        });

        r8c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c4FocusLost(evt);
            }
        });

        r8c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r8c3FocusLost(evt);
            }
        });

        r6c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c9FocusLost(evt);
            }
        });

        r6c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c8FocusLost(evt);
            }
        });

        r5c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r5c9FocusLost(evt);
            }
        });

        r6c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c2FocusLost(evt);
            }
        });

        r6c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r6c7FocusLost(evt);
            }
        });

        r9c8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c8FocusLost(evt);
            }
        });

        r9c9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c9FocusLost(evt);
            }
        });

        r9c7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c7FocusLost(evt);
            }
        });

        r9c2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c2FocusLost(evt);
            }
        });

        r9c6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c6FocusLost(evt);
            }
        });

        r9c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c4FocusLost(evt);
            }
        });

        r9c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c5FocusLost(evt);
            }
        });

        r9c1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c1FocusLost(evt);
            }
        });

        r9c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                r9c3FocusLost(evt);
            }
        });

        sbmtBtn.setText("Submit");
        sbmtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbmtBtnActionPerformed(evt);
            }
        });

        QuitBtn.setBackground(new java.awt.Color(204, 204, 204));
        QuitBtn.setText("Quit Game");
        QuitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitBtnActionPerformed(evt);
            }
        });

        rstrtBtn.setBackground(new java.awt.Color(204, 204, 204));
        rstrtBtn.setText("Start / Restart");
        rstrtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstrtBtnActionPerformed(evt);
            }
        });

        WelcomeText.setForeground(new java.awt.Color(204, 0, 0));
        WelcomeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WelcomeText.setText("Welcome to Sudoku...");

        results.setForeground(new java.awt.Color(153, 0, 51));
        results.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WelcomeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sbmtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(156, 156, 156))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(results, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(r9c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r4c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r6c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r7c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r8c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r4c2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r6c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r7c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r8c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(r9c2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r4c3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r6c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r7c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r8c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(r9c3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r4c4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r3c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r1c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r2c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(r6c4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r5c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r7c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r8c4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(r9c4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r3c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r4c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r6c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(r7c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r8c5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(r1c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r9c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r2c5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r3c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r4c6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r6c6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(r7c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r8c6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(r1c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r9c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r2c6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r3c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r4c7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r1c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r9c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r2c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r6c7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(r7c7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r8c7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r3c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r4c8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r6c8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(r5c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(r7c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(r8c8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(r1c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r9c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r2c8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(rstrtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(106, 106, 106)
                                            .addComponent(QuitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r3c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(r4c9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r6c9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(r5c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(r7c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(r8c9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(r1c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r9c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r2c9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(WelcomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sbmtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(r1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(r1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(r1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(r5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r6c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(r4c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r6c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(r4c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(r4c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r6c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(r7c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r8c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r9c1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(r7c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r8c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r9c3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(r7c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r8c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(r9c2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(r1c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r2c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r3c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r4c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r5c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r6c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r7c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r8c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r9c9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r1c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r2c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r3c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r1c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r2c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r3c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r1c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r2c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r3c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r4c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r5c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r6c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r4c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r5c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r6c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r4c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r5c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r6c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r7c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r8c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r9c8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r7c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r8c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r9c7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r7c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r8c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r9c6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r1c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r2c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r3c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r1c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r2c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r3c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r4c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r5c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r6c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r4c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r5c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r6c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(r7c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r8c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r9c5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r7c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r8c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r9c4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rstrtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        r1c1.setFont(new Font("Arial",Font.BOLD, 35));
        r1c3.setFont(new Font("Arial",Font.BOLD, 35));
        r1c4.setFont(new Font("Arial",Font.BOLD, 35));
        r1c5.setFont(new Font("Arial",Font.BOLD, 35));
        r1c6.setFont(new Font("Arial",Font.BOLD, 35));
        r1c7.setFont(new Font("Arial",Font.BOLD, 35));
        r1c8.setFont(new Font("Arial",Font.BOLD, 35));
        r1c9.setFont(new Font("Arial",Font.BOLD, 35));

        r2c1.setFont(new Font("Arial",Font.BOLD, 35));
        r2c2.setFont(new Font("Arial",Font.BOLD, 35));
        r2c3.setFont(new Font("Arial",Font.BOLD, 35));
        r2c4.setFont(new Font("Arial",Font.BOLD, 35));
        r2c5.setFont(new Font("Arial",Font.BOLD, 35));
        r2c6.setFont(new Font("Arial",Font.BOLD, 35));
        r2c7.setFont(new Font("Arial",Font.BOLD, 35));
        r2c8.setFont(new Font("Arial",Font.BOLD, 35));
        r2c9.setFont(new Font("Arial",Font.BOLD, 35));

        r3c1.setFont(new Font("Arial",Font.BOLD, 35));
        r3c2.setFont(new Font("Arial",Font.BOLD, 35));
        r3c3.setFont(new Font("Arial",Font.BOLD, 35));
        r3c4.setFont(new Font("Arial",Font.BOLD, 35));
        r3c5.setFont(new Font("Arial",Font.BOLD, 35));
        r3c6.setFont(new Font("Arial",Font.BOLD, 35));
        r3c7.setFont(new Font("Arial",Font.BOLD, 35));
        r3c8.setFont(new Font("Arial",Font.BOLD, 35));
        r3c9.setFont(new Font("Arial",Font.BOLD, 35));

        r4c1.setFont(new Font("Arial",Font.BOLD, 35));
        r4c2.setFont(new Font("Arial",Font.BOLD, 35));
        r4c3.setFont(new Font("Arial",Font.BOLD, 35));
        r4c4.setFont(new Font("Arial",Font.BOLD, 35));
        r4c5.setFont(new Font("Arial",Font.BOLD, 35));
        r4c6.setFont(new Font("Arial",Font.BOLD, 35));
        r4c7.setFont(new Font("Arial",Font.BOLD, 35));
        r4c8.setFont(new Font("Arial",Font.BOLD, 35));
        r4c9.setFont(new Font("Arial",Font.BOLD, 35));

        r4c1.setFont(new Font("Arial",Font.BOLD, 35));
        r4c2.setFont(new Font("Arial",Font.BOLD, 35));
        r4c3.setFont(new Font("Arial",Font.BOLD, 35));
        r4c4.setFont(new Font("Arial",Font.BOLD, 35));
        r4c5.setFont(new Font("Arial",Font.BOLD, 35));
        r4c6.setFont(new Font("Arial",Font.BOLD, 35));
        r4c7.setFont(new Font("Arial",Font.BOLD, 35));
        r4c8.setFont(new Font("Arial",Font.BOLD, 35));
        r4c9.setFont(new Font("Arial",Font.BOLD, 35));

        r5c1.setFont(new Font("Arial",Font.BOLD, 35));
        r5c2.setFont(new Font("Arial",Font.BOLD, 35));
        r5c3.setFont(new Font("Arial",Font.BOLD, 35));
        r5c4.setFont(new Font("Arial",Font.BOLD, 35));
        r5c5.setFont(new Font("Arial",Font.BOLD, 35));
        r5c6.setFont(new Font("Arial",Font.BOLD, 35));
        r5c7.setFont(new Font("Arial",Font.BOLD, 35));
        r5c8.setFont(new Font("Arial",Font.BOLD, 35));
        r5c9.setFont(new Font("Arial",Font.BOLD, 35));

        r6c1.setFont(new Font("Arial",Font.BOLD, 35));
        r6c2.setFont(new Font("Arial",Font.BOLD, 35));
        r6c3.setFont(new Font("Arial",Font.BOLD, 35));
        r6c4.setFont(new Font("Arial",Font.BOLD, 35));
        r6c5.setFont(new Font("Arial",Font.BOLD, 35));
        r6c6.setFont(new Font("Arial",Font.BOLD, 35));
        r6c7.setFont(new Font("Arial",Font.BOLD, 35));
        r6c8.setFont(new Font("Arial",Font.BOLD, 35));
        r6c9.setFont(new Font("Arial",Font.BOLD, 35));

        r7c1.setFont(new Font("Arial",Font.BOLD, 35));
        r7c2.setFont(new Font("Arial",Font.BOLD, 35));
        r7c3.setFont(new Font("Arial",Font.BOLD, 35));
        r7c4.setFont(new Font("Arial",Font.BOLD, 35));
        r7c5.setFont(new Font("Arial",Font.BOLD, 35));
        r7c6.setFont(new Font("Arial",Font.BOLD, 35));
        r7c7.setFont(new Font("Arial",Font.BOLD, 35));
        r7c8.setFont(new Font("Arial",Font.BOLD, 35));
        r7c9.setFont(new Font("Arial",Font.BOLD, 35));

        r8c1.setFont(new Font("Arial",Font.BOLD, 35));
        r8c2.setFont(new Font("Arial",Font.BOLD, 35));
        r8c3.setFont(new Font("Arial",Font.BOLD, 35));
        r8c4.setFont(new Font("Arial",Font.BOLD, 35));
        r8c5.setFont(new Font("Arial",Font.BOLD, 35));
        r8c6.setFont(new Font("Arial",Font.BOLD, 35));
        r8c7.setFont(new Font("Arial",Font.BOLD, 35));
        r8c8.setFont(new Font("Arial",Font.BOLD, 35));
        r8c9.setFont(new Font("Arial",Font.BOLD, 35));

        r9c1.setFont(new Font("Arial",Font.BOLD, 35));
        r9c2.setFont(new Font("Arial",Font.BOLD, 35));
        r9c3.setFont(new Font("Arial",Font.BOLD, 35));
        r9c4.setFont(new Font("Arial",Font.BOLD, 35));
        r9c5.setFont(new Font("Arial",Font.BOLD, 35));
        r9c6.setFont(new Font("Arial",Font.BOLD, 35));
        r9c7.setFont(new Font("Arial",Font.BOLD, 35));
        r9c8.setFont(new Font("Arial",Font.BOLD, 35));
        r9c9.setFont(new Font("Arial",Font.BOLD, 35));
        r1c2.setFont(new Font("Arial",Font.BOLD, 35));
        Font buttonFont = QuitBtn.getFont();
        QuitBtn.setFont(new Font(buttonFont.getName(), Font.PLAIN, 15));
        sbmtBtn.setFont(new Font(buttonFont.getName(), Font.PLAIN, 20));
        rstrtBtn.setFont(new Font(buttonFont.getName(), Font.PLAIN, 15));
        WelcomeText.setFont(new Font("Tahoma", Font.PLAIN, 25));
        results.setFont(new Font("Tahoma", Font.PLAIN, 25));

        pack();
    }// </editor-fold>//GEN-END:initComponents
        

        private void r1c1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_r1c1FocusLost
        try{
            String text = r1c1.getText();
            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){
                sudoku[0][0] = Integer.parseInt(text);
            }
            else{
                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );
            }
        }
        catch(Exception e){}
    }//GEN-LAST:event_r1c1FocusLost

    private void r1c2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_r1c2FocusLost
        try{
        String text = r1c2.getText();            
        if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][1] = Integer.parseInt(text);            
        }            
        else{                
            JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }  
        }
        catch(Exception e){}
    }//GEN-LAST:event_r1c2FocusLost

    private void sbmtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbmtBtnActionPerformed
        submit();
    }//GEN-LAST:event_sbmtBtnActionPerformed

    private void QuitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitBtnActionPerformed
       int confirmed = JOptionPane.showConfirmDialog(null, 
        "Are you sure you want to exit the program?", "Exit Program Message Box",
        JOptionPane.YES_NO_OPTION);

    if (confirmed == JOptionPane.YES_OPTION) {
      System.exit(0);
    }
    }//GEN-LAST:event_QuitBtnActionPerformed

    private void rstrtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstrtBtnActionPerformed
        randomGenerator();
    }//GEN-LAST:event_rstrtBtnActionPerformed
   
    private void r1c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }              
    } 
        catch(Exception e){}
}

    private void r1c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r1c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r1c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r1c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r1c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r1c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r1c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[0][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r2c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r2c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[1][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r3c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r3c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[2][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r4c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r4c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[3][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r7c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r7c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[6][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r8c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r8c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[7][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r5c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r5c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[4][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r6c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r6c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[5][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c8FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c8.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][7] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c9FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c9.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][8] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c7FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c7.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][6] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c2FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c2.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][1] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c6FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c6.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][5] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c4FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c4.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][3] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c5FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c5.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][4] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c1FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c1.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][0] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }                                    

    private void r9c3FocusLost(java.awt.event.FocusEvent evt) {                                     
        try{String text = r9c3.getText();            if(text.trim().equals("") || text == null || text.trim().equals("1") || text.trim().equals("2") || text.trim().equals("3") || text.trim().equals("4") || text.trim().equals("5") || text.trim().equals("6") || text.trim().equals("7") || text.trim().equals("8") || text.trim().equals("9")){                        
        sudoku[8][2] = Integer.parseInt(text);            }            else{                JOptionPane.showMessageDialog( null,"Wrong Input. Type a number from 1-9" );            }                   }          catch(Exception e){}
    }
    
    public void submit(){
        outerloop:
        for(int i =0; i<9; i++){
            for(int j=0; j<9; j++){
                for(int k=0; k<9; k++){
                    if(j==k){
                        continue;
                    }
                    if(sudoku[i][j]==sudoku[i][k]){
                        results.setText("Sorry. You Lost");
                        break outerloop;
                    }
                    else{
                            for(int a =0; a<9; a++){
                                for(int b=0; b<9; b++){
                                    for(int c=0; c<9; c++){
                                        if(b==c){
                                            continue;
                                        }
                                        if(sudoku[b][a]==sudoku[c][a]){
                                            results.setText("Sorry. You Lost.");
                                            break outerloop;
                                        }
                                        else{
                                            continue;
                                        }
                                    }    
                                }
                            }
                    }
                }    
            }
            if(i==8){
                        results.setText("Congratulations... You Won!!!");
            }
        }
        for(int a=0;a<9;a++){
            for(int b=0;b<9;b++){
                System.out.print(sudoku[a][b]+" ");
            }
            System.out.println("");
        }
        
    }
    
    public void noEnterValue(){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                sudoku[i][j]=0;
                r1c1.setEditable(false);r1c1.setText(null);
                r1c2.setEditable(false);r1c2.setText(null);
                r1c3.setEditable(false);r1c3.setText(null);
                r1c4.setEditable(false);r1c4.setText(null);
                r1c5.setEditable(false);r1c5.setText(null);
                r1c6.setEditable(false);r1c6.setText(null);
                r1c7.setEditable(false);r1c7.setText(null);
                r1c8.setEditable(false);r1c8.setText(null);
                r1c9.setEditable(false);r1c9.setText(null);
                r2c1.setEditable(false);r2c1.setText(null);
                r2c2.setEditable(false);r2c2.setText(null);
                r2c3.setEditable(false);r2c3.setText(null);
                r2c4.setEditable(false);r2c4.setText(null);
                r2c5.setEditable(false);r2c5.setText(null);
                r2c6.setEditable(false);r2c6.setText(null);
                r2c7.setEditable(false);r2c7.setText(null);
                r2c8.setEditable(false);r2c8.setText(null);
                r2c9.setEditable(false);r2c9.setText(null);
                r3c1.setEditable(false);r3c1.setText(null);
                r3c2.setEditable(false);r3c2.setText(null);
                r3c3.setEditable(false);r3c3.setText(null);
                r3c4.setEditable(false);r3c4.setText(null);
                r3c5.setEditable(false);r3c5.setText(null);
                r3c6.setEditable(false);r3c6.setText(null);
                r3c7.setEditable(false);r3c7.setText(null);
                r3c8.setEditable(false);r3c8.setText(null);
                r3c9.setEditable(false);r3c9.setText(null);
                r4c1.setEditable(false);r4c1.setText(null);
                r4c2.setEditable(false);r4c2.setText(null);
                r4c3.setEditable(false);r4c3.setText(null);
                r4c4.setEditable(false);r4c4.setText(null);
                r4c5.setEditable(false);r4c5.setText(null);
                r4c6.setEditable(false);r4c6.setText(null);
                r4c7.setEditable(false);r4c7.setText(null);
                r4c8.setEditable(false);r4c8.setText(null);
                r4c9.setEditable(false);r4c9.setText(null);
                r5c1.setEditable(false);r5c1.setText(null);
                r5c2.setEditable(false);r5c2.setText(null);
                r5c3.setEditable(false);r5c3.setText(null);
                r5c4.setEditable(false);r5c4.setText(null);
                r5c5.setEditable(false);r5c5.setText(null);
                r5c6.setEditable(false);r5c6.setText(null);
                r5c7.setEditable(false);r5c7.setText(null);
                r5c8.setEditable(false);r5c8.setText(null);
                r5c9.setEditable(false);r5c9.setText(null);
                r6c1.setEditable(false);r6c1.setText(null);
                r6c2.setEditable(false);r6c2.setText(null);
                r6c3.setEditable(false);r6c3.setText(null);
                r6c4.setEditable(false);r6c4.setText(null);
                r6c5.setEditable(false);r6c5.setText(null);
                r6c6.setEditable(false);r6c6.setText(null);
                r6c7.setEditable(false);r6c7.setText(null);
                r6c8.setEditable(false);r6c8.setText(null);
                r6c9.setEditable(false);r6c9.setText(null);
                r7c1.setEditable(false);r7c1.setText(null);
                r7c2.setEditable(false);r7c2.setText(null);
                r7c3.setEditable(false);r7c3.setText(null);
                r7c4.setEditable(false);r7c4.setText(null);
                r7c5.setEditable(false);r7c5.setText(null);
                r7c6.setEditable(false);r7c6.setText(null);
                r7c7.setEditable(false);r7c7.setText(null);
                r7c8.setEditable(false);r7c8.setText(null);
                r7c9.setEditable(false);r7c9.setText(null);
                r8c1.setEditable(false);r8c1.setText(null);
                r8c2.setEditable(false);r8c2.setText(null);
                r8c3.setEditable(false);r8c3.setText(null);
                r8c4.setEditable(false);r8c4.setText(null);
                r8c5.setEditable(false);r8c5.setText(null);
                r8c6.setEditable(false);r8c6.setText(null);
                r8c7.setEditable(false);r8c7.setText(null);
                r8c8.setEditable(false);r8c8.setText(null);
                r8c9.setEditable(false);r8c9.setText(null);
                r9c1.setEditable(false);r9c1.setText(null);
                r9c2.setEditable(false);r9c2.setText(null);
                r9c3.setEditable(false);r9c3.setText(null);
                r9c4.setEditable(false);r9c4.setText(null);
                r9c5.setEditable(false);r9c5.setText(null);
                r9c6.setEditable(false);r9c6.setText(null);
                r9c7.setEditable(false);r9c7.setText(null);
                r9c8.setEditable(false);r9c8.setText(null);
                r9c9.setEditable(false);r9c9.setText(null);
            }
        }
    }
    
    public void clearValues(){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                sudoku[i][j]=0;
                r1c1.setEditable(true);r1c1.setText(null);r1c1.setForeground(Color.black);
                r1c2.setEditable(true);r1c2.setText(null);r1c2.setForeground(Color.black);
                r1c3.setEditable(true);r1c3.setText(null);r1c3.setForeground(Color.black);
                r1c4.setEditable(true);r1c4.setText(null);r1c4.setForeground(Color.black);
                r1c5.setEditable(true);r1c5.setText(null);r1c5.setForeground(Color.black);
                r1c6.setEditable(true);r1c6.setText(null);r1c6.setForeground(Color.black);
                r1c7.setEditable(true);r1c7.setText(null);r1c7.setForeground(Color.black);
                r1c8.setEditable(true);r1c8.setText(null);r1c8.setForeground(Color.black);
                r1c9.setEditable(true);r1c9.setText(null);r1c9.setForeground(Color.black);
                r2c1.setEditable(true);r2c1.setText(null);r2c1.setForeground(Color.black);
                r2c2.setEditable(true);r2c2.setText(null);r2c2.setForeground(Color.black);
                r2c3.setEditable(true);r2c3.setText(null);r2c3.setForeground(Color.black);
                r2c4.setEditable(true);r2c4.setText(null);r2c4.setForeground(Color.black);
                r2c5.setEditable(true);r2c5.setText(null);r2c5.setForeground(Color.black);
                r2c6.setEditable(true);r2c6.setText(null);r2c6.setForeground(Color.black);
                r2c7.setEditable(true);r2c7.setText(null);r2c7.setForeground(Color.black);
                r2c8.setEditable(true);r2c8.setText(null);r2c8.setForeground(Color.black);
                r2c9.setEditable(true);r2c9.setText(null);r2c9.setForeground(Color.black);
                r3c1.setEditable(true);r3c1.setText(null);r3c1.setForeground(Color.black);
                r3c2.setEditable(true);r3c2.setText(null);r3c2.setForeground(Color.black);
                r3c3.setEditable(true);r3c3.setText(null);r3c3.setForeground(Color.black);
                r3c4.setEditable(true);r3c4.setText(null);r3c4.setForeground(Color.black);
                r3c5.setEditable(true);r3c5.setText(null);r3c5.setForeground(Color.black);
                r3c6.setEditable(true);r3c6.setText(null);r3c6.setForeground(Color.black);
                r3c7.setEditable(true);r3c7.setText(null);r3c7.setForeground(Color.black);
                r3c8.setEditable(true);r3c8.setText(null);r3c8.setForeground(Color.black);
                r3c9.setEditable(true);r3c9.setText(null);r3c9.setForeground(Color.black);
                r4c1.setEditable(true);r4c1.setText(null);r4c1.setForeground(Color.black);
                r4c2.setEditable(true);r4c2.setText(null);r4c2.setForeground(Color.black);
                r4c3.setEditable(true);r4c3.setText(null);r4c3.setForeground(Color.black);
                r4c4.setEditable(true);r4c4.setText(null);r4c4.setForeground(Color.black);
                r4c5.setEditable(true);r4c5.setText(null);r4c5.setForeground(Color.black);
                r4c6.setEditable(true);r4c6.setText(null);r4c6.setForeground(Color.black);
                r4c7.setEditable(true);r4c7.setText(null);r4c7.setForeground(Color.black);
                r4c8.setEditable(true);r4c8.setText(null);r4c8.setForeground(Color.black);
                r4c9.setEditable(true);r4c9.setText(null);r4c9.setForeground(Color.black);
                r5c1.setEditable(true);r5c1.setText(null);r5c1.setForeground(Color.black);
                r5c2.setEditable(true);r5c2.setText(null);r5c2.setForeground(Color.black);
                r5c3.setEditable(true);r5c3.setText(null);r5c3.setForeground(Color.black);
                r5c4.setEditable(true);r5c4.setText(null);r5c4.setForeground(Color.black);
                r5c5.setEditable(true);r5c5.setText(null);r5c5.setForeground(Color.black);
                r5c6.setEditable(true);r5c6.setText(null);r5c6.setForeground(Color.black);
                r5c7.setEditable(true);r5c7.setText(null);r5c7.setForeground(Color.black);
                r5c8.setEditable(true);r5c8.setText(null);r5c8.setForeground(Color.black);
                r5c9.setEditable(true);r5c9.setText(null);r5c9.setForeground(Color.black);
                r6c1.setEditable(true);r6c1.setText(null);r6c1.setForeground(Color.black);
                r6c2.setEditable(true);r6c2.setText(null);r6c2.setForeground(Color.black);
                r6c3.setEditable(true);r6c3.setText(null);r6c3.setForeground(Color.black);
                r6c4.setEditable(true);r6c4.setText(null);r6c4.setForeground(Color.black);
                r6c5.setEditable(true);r6c5.setText(null);r6c5.setForeground(Color.black);
                r6c6.setEditable(true);r6c6.setText(null);r6c6.setForeground(Color.black);
                r6c7.setEditable(true);r6c7.setText(null);r6c7.setForeground(Color.black);
                r6c8.setEditable(true);r6c8.setText(null);r6c8.setForeground(Color.black);
                r6c9.setEditable(true);r6c9.setText(null);r6c9.setForeground(Color.black);
                r7c1.setEditable(true);r7c1.setText(null);r7c1.setForeground(Color.black);
                r7c2.setEditable(true);r7c2.setText(null);r7c2.setForeground(Color.black);
                r7c3.setEditable(true);r7c3.setText(null);r7c3.setForeground(Color.black);
                r7c4.setEditable(true);r7c4.setText(null);r7c4.setForeground(Color.black);
                r7c5.setEditable(true);r7c5.setText(null);r7c5.setForeground(Color.black);
                r7c6.setEditable(true);r7c6.setText(null);r7c6.setForeground(Color.black);
                r7c7.setEditable(true);r7c7.setText(null);r7c7.setForeground(Color.black);
                r7c8.setEditable(true);r7c8.setText(null);r7c8.setForeground(Color.black);
                r7c9.setEditable(true);r7c9.setText(null);r7c9.setForeground(Color.black);
                r8c1.setEditable(true);r8c1.setText(null);r8c1.setForeground(Color.black);
                r8c2.setEditable(true);r8c2.setText(null);r8c2.setForeground(Color.black);
                r8c3.setEditable(true);r8c3.setText(null);r8c3.setForeground(Color.black);
                r8c4.setEditable(true);r8c4.setText(null);r8c4.setForeground(Color.black);
                r8c5.setEditable(true);r8c5.setText(null);r8c5.setForeground(Color.black);
                r8c6.setEditable(true);r8c6.setText(null);r8c6.setForeground(Color.black);
                r8c7.setEditable(true);r8c7.setText(null);r8c7.setForeground(Color.black);
                r8c8.setEditable(true);r8c8.setText(null);r8c8.setForeground(Color.black);
                r8c9.setEditable(true);r8c9.setText(null);r8c9.setForeground(Color.black);
                r9c1.setEditable(true);r9c1.setText(null);r9c1.setForeground(Color.black);
                r9c2.setEditable(true);r9c2.setText(null);r9c2.setForeground(Color.black);
                r9c3.setEditable(true);r9c3.setText(null);r9c3.setForeground(Color.black);
                r9c4.setEditable(true);r9c4.setText(null);r9c4.setForeground(Color.black);
                r9c5.setEditable(true);r9c5.setText(null);r9c5.setForeground(Color.black);
                r9c6.setEditable(true);r9c6.setText(null);r9c6.setForeground(Color.black);
                r9c7.setEditable(true);r9c7.setText(null);r9c7.setForeground(Color.black);
                r9c8.setEditable(true);r9c8.setText(null);r9c8.setForeground(Color.black);
                r9c9.setEditable(true);r9c9.setText(null);r9c9.setForeground(Color.black);
            }
        }
    }
    
    public void randomGenerator(){
        clearValues();
        Random rn = new Random();  
        int max=9;
        int min = 1;     
        mainloop:
        for(int i=0;i<=30;i++){
            int rndm1 = rn.nextInt(max - min + 1) + min;
            int rndm2 = rn.nextInt(max - min + 1) + min;
            String rndmTxt = "r" + rndm1 + "c" + rndm2;
            int value = rn.nextInt(max - min + 1) + min;
            
            for(int j=0;j<9;j++){
                if(sudoku[j][rndm2-1]==value){
                    continue mainloop;
                }
            }
            
            for(int k=0;k<9;k++){
                if(sudoku[rndm1-1][k]==value){
                    continue mainloop;
                }
            }
            
            sudoku[rndm1-1][rndm2-1]=value;
            switch (rndmTxt){
                case "r1c1" : 
                        r1c1.setEditable(false);r1c1.setForeground(Color.blue);r1c1.setText(Integer.toString(value));break;
                case "r1c2" : 
                        r1c2.setEditable(false);r1c2.setForeground(Color.blue);r1c2.setText(Integer.toString(value));break;
                case "r1c3" : 
                        r1c3.setEditable(false);r1c3.setForeground(Color.blue);r1c3.setText(Integer.toString(value));break;
                case "r1c4" : 
                        r1c4.setEditable(false);r1c4.setForeground(Color.blue);r1c4.setText(Integer.toString(value));break;
                case "r1c5" : 
                        r1c5.setEditable(false);r1c5.setForeground(Color.blue);r1c5.setText(Integer.toString(value));break;
                case "r1c6" : 
                        r1c6.setEditable(false);r1c6.setForeground(Color.blue);r1c6.setText(Integer.toString(value));break;
                case "r1c7" : 
                        r1c7.setEditable(false);r1c7.setForeground(Color.blue);r1c7.setText(Integer.toString(value));break;
                case "r1c8" : 
                        r1c8.setEditable(false);r1c8.setForeground(Color.blue);r1c8.setText(Integer.toString(value));break;
                case "r1c9" : 
                        r1c9.setEditable(false);r1c9.setForeground(Color.blue);r1c9.setText(Integer.toString(value));break;
                case "r2c1" : 
                        r2c1.setEditable(false);r2c1.setForeground(Color.blue);r2c1.setText(Integer.toString(value));break;
                case "r2c2" : 
                        r2c2.setEditable(false);r2c2.setForeground(Color.blue);r2c2.setText(Integer.toString(value));break;
                case "r2c3" : 
                        r2c3.setEditable(false);r2c3.setForeground(Color.blue);r2c3.setText(Integer.toString(value));break;
                case "r2c4" : 
                        r2c4.setEditable(false);r2c4.setForeground(Color.blue);r2c4.setText(Integer.toString(value));break;
                case "r2c5" : 
                        r2c5.setEditable(false);r2c5.setForeground(Color.blue);r2c5.setText(Integer.toString(value));break;
                case "r2c6" : 
                        r2c6.setEditable(false);r2c6.setForeground(Color.blue);r2c6.setText(Integer.toString(value));break;
                case "r2c7" : 
                        r2c7.setEditable(false);r2c7.setForeground(Color.blue);r2c7.setText(Integer.toString(value));break;
                case "r2c8" : 
                        r2c8.setEditable(false);r2c8.setForeground(Color.blue);r2c8.setText(Integer.toString(value));break;
                case "r2c9" : 
                        r2c9.setEditable(false);r2c9.setForeground(Color.blue);r2c9.setText(Integer.toString(value));break;
                case "r3c1" : 
                        r3c1.setEditable(false);r3c1.setForeground(Color.blue);r3c1.setText(Integer.toString(value));break;
                case "r3c2" : 
                        r3c2.setEditable(false);r3c2.setForeground(Color.blue);r3c2.setText(Integer.toString(value));break;
                case "r3c3" : 
                        r3c3.setEditable(false);r3c3.setForeground(Color.blue);r3c3.setText(Integer.toString(value));break;
                case "r3c4" : 
                        r3c4.setEditable(false);r3c4.setForeground(Color.blue);r3c4.setText(Integer.toString(value));break;
                case "r3c5" : 
                        r3c5.setEditable(false);r3c5.setForeground(Color.blue);r3c5.setText(Integer.toString(value));break;
                case "r3c6" : 
                        r3c6.setEditable(false);r3c6.setForeground(Color.blue);r3c6.setText(Integer.toString(value));break;
                case "r3c7" : 
                        r3c7.setEditable(false);r3c7.setForeground(Color.blue);r3c7.setText(Integer.toString(value));break;
                case "r3c8" : 
                        r3c8.setEditable(false);r3c8.setForeground(Color.blue);r3c8.setText(Integer.toString(value));break;
                case "r3c9" : 
                        r3c9.setEditable(false);r3c9.setForeground(Color.blue);r3c9.setText(Integer.toString(value));break;
                case "r4c1" : 
                        r4c1.setEditable(false);r4c1.setForeground(Color.blue);r4c1.setText(Integer.toString(value));break;
                case "r4c2" : 
                        r4c2.setEditable(false);r4c2.setForeground(Color.blue);r4c2.setText(Integer.toString(value));break;
                case "r4c3" : 
                        r4c3.setEditable(false);r4c3.setForeground(Color.blue);r4c3.setText(Integer.toString(value));break;
                case "r4c4" : 
                        r4c4.setEditable(false);r4c4.setForeground(Color.blue);r4c4.setText(Integer.toString(value));break;
                case "r4c5" : 
                        r4c5.setEditable(false);r4c5.setForeground(Color.blue);r4c5.setText(Integer.toString(value));break;
                case "r4c6" : 
                        r4c6.setEditable(false);r4c6.setForeground(Color.blue);r4c6.setText(Integer.toString(value));break;
                case "r4c7" : 
                        r4c7.setEditable(false);r4c7.setForeground(Color.blue);r4c7.setText(Integer.toString(value));break;
                case "r4c8" : 
                        r4c8.setEditable(false);r4c8.setForeground(Color.blue);r4c8.setText(Integer.toString(value));break;
                case "r4c9" : 
                        r4c9.setEditable(false);r4c9.setForeground(Color.blue);r4c9.setText(Integer.toString(value));break;
                case "r5c1" : 
                        r5c1.setEditable(false);r5c1.setForeground(Color.blue);r5c1.setText(Integer.toString(value));break;
                case "r5c2" : 
                        r5c2.setEditable(false);r5c2.setForeground(Color.blue);r5c2.setText(Integer.toString(value));break;
                case "r5c3" : 
                        r5c3.setEditable(false);r5c3.setForeground(Color.blue);r5c3.setText(Integer.toString(value));break;
                case "r5c4" : 
                        r5c4.setEditable(false);r5c4.setForeground(Color.blue);r5c4.setText(Integer.toString(value));break;
                case "r5c5" : 
                        r5c5.setEditable(false);r5c5.setForeground(Color.blue);r5c5.setText(Integer.toString(value));break;
                case "r5c6" : 
                        r5c6.setEditable(false);r5c6.setForeground(Color.blue);r5c6.setText(Integer.toString(value));break;
                case "r5c7" : 
                        r5c7.setEditable(false);r5c7.setForeground(Color.blue);r5c7.setText(Integer.toString(value));break;
                case "r5c8" : 
                        r5c8.setEditable(false);r5c8.setForeground(Color.blue);r5c8.setText(Integer.toString(value));break;
                case "r5c9" : 
                        r5c9.setEditable(false);r5c9.setForeground(Color.blue);r5c9.setText(Integer.toString(value));break;
                case "r6c1" : 
                        r6c1.setEditable(false);r6c1.setForeground(Color.blue);r6c1.setText(Integer.toString(value));break;
                case "r6c2" : 
                        r6c2.setEditable(false);r6c2.setForeground(Color.blue);r6c2.setText(Integer.toString(value));break;
                case "r6c3" : 
                        r6c3.setEditable(false);r6c3.setForeground(Color.blue);r6c3.setText(Integer.toString(value));break;
                case "r6c4" : 
                        r6c4.setEditable(false);r6c4.setForeground(Color.blue);r6c4.setText(Integer.toString(value));break;
                case "r6c5" : 
                        r6c5.setEditable(false);r6c5.setForeground(Color.blue);r6c5.setText(Integer.toString(value));break;
                case "r6c6" : 
                        r6c6.setEditable(false);r6c6.setForeground(Color.blue);r6c6.setText(Integer.toString(value));break;
                case "r6c7" : 
                        r6c7.setEditable(false);r6c7.setForeground(Color.blue);r6c7.setText(Integer.toString(value));break;
                case "r6c8" : 
                        r6c8.setEditable(false);r6c8.setForeground(Color.blue);r6c8.setText(Integer.toString(value));break;
                case "r6c9" : 
                        r6c9.setEditable(false);r6c9.setForeground(Color.blue);r6c9.setText(Integer.toString(value));break;
                case "r7c1" : 
                        r7c1.setEditable(false);r7c1.setForeground(Color.blue);r7c1.setText(Integer.toString(value));break;
                case "r7c2" : 
                        r7c2.setEditable(false);r7c2.setForeground(Color.blue);r7c2.setText(Integer.toString(value));break;
                case "r7c3" : 
                        r7c3.setEditable(false);r7c3.setForeground(Color.blue);r7c3.setText(Integer.toString(value));break;
                case "r7c4" : 
                        r7c4.setEditable(false);r7c4.setForeground(Color.blue);r7c4.setText(Integer.toString(value));break;
                case "r7c5" : 
                        r7c5.setEditable(false);r7c5.setForeground(Color.blue);r7c5.setText(Integer.toString(value));break;
                case "r7c6" : 
                        r7c6.setEditable(false);r7c6.setForeground(Color.blue);r7c6.setText(Integer.toString(value));break;
                case "r7c7" : 
                        r7c7.setEditable(false);r7c7.setForeground(Color.blue);r7c7.setText(Integer.toString(value));break;
                case "r7c8" : 
                        r7c8.setEditable(false);r7c8.setForeground(Color.blue);r7c8.setText(Integer.toString(value));break;
                case "r7c9" : 
                        r7c9.setEditable(false);r7c9.setForeground(Color.blue);r7c9.setText(Integer.toString(value));break;
                case "r8c1" : 
                        r8c1.setEditable(false);r8c1.setForeground(Color.blue);r8c1.setText(Integer.toString(value));break;
                case "r8c2" : 
                        r8c2.setEditable(false);r8c2.setForeground(Color.blue);r8c2.setText(Integer.toString(value));break;
                case "r8c3" : 
                        r8c3.setEditable(false);r8c3.setForeground(Color.blue);r8c3.setText(Integer.toString(value));break;
                case "r8c4" : 
                        r8c4.setEditable(false);r8c4.setForeground(Color.blue);r8c4.setText(Integer.toString(value));break;
                case "r8c5" : 
                        r8c5.setEditable(false);r8c5.setForeground(Color.blue);r8c5.setText(Integer.toString(value));break;
                case "r8c6" : 
                        r8c6.setEditable(false);r8c6.setForeground(Color.blue);r8c6.setText(Integer.toString(value));break;
                case "r8c7" : 
                        r8c7.setEditable(false);r8c7.setForeground(Color.blue);r8c7.setText(Integer.toString(value));break;
                case "r8c8" : 
                        r8c8.setEditable(false);r8c8.setForeground(Color.blue);r8c8.setText(Integer.toString(value));break;
                case "r8c9" : 
                        r8c9.setEditable(false);r8c9.setForeground(Color.blue);r8c9.setText(Integer.toString(value));break;
                case "r9c1" : 
                        r9c1.setEditable(false);r9c1.setForeground(Color.blue);r9c1.setText(Integer.toString(value));break;
                case "r9c2" : 
                        r9c2.setEditable(false);r9c2.setForeground(Color.blue);r9c2.setText(Integer.toString(value));break;
                case "r9c3" : 
                        r9c3.setEditable(false);r9c3.setForeground(Color.blue);r9c3.setText(Integer.toString(value));break;
                case "r9c4" : 
                        r9c4.setEditable(false);r9c4.setForeground(Color.blue);r9c4.setText(Integer.toString(value));break;
                case "r9c5" : 
                        r9c5.setEditable(false);r9c5.setForeground(Color.blue);r9c5.setText(Integer.toString(value));break;
                case "r9c6" : 
                        r9c6.setEditable(false);r9c6.setForeground(Color.blue);r9c6.setText(Integer.toString(value));break;
                case "r9c7" : 
                        r9c7.setEditable(false);r9c7.setForeground(Color.blue);r9c7.setText(Integer.toString(value));break;
                case "r9c8" : 
                        r9c8.setEditable(false);r9c8.setForeground(Color.blue);r9c8.setText(Integer.toString(value));break;
                case "r9c9" : 
                        r9c9.setEditable(false);r9c9.setForeground(Color.blue);r9c9.setText(Integer.toString(value));break;
                                        
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Sudoku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton QuitBtn;
    private javax.swing.JLabel WelcomeText;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JTextField r1c1;
    private javax.swing.JTextField r1c2;
    private javax.swing.JTextField r1c3;
    private javax.swing.JTextField r1c4;
    private javax.swing.JTextField r1c5;
    private javax.swing.JTextField r1c6;
    private javax.swing.JTextField r1c7;
    private javax.swing.JTextField r1c8;
    private javax.swing.JTextField r1c9;
    private javax.swing.JTextField r2c1;
    private javax.swing.JTextField r2c2;
    private javax.swing.JTextField r2c3;
    private javax.swing.JTextField r2c4;
    private javax.swing.JTextField r2c5;
    private javax.swing.JTextField r2c6;
    private javax.swing.JTextField r2c7;
    private javax.swing.JTextField r2c8;
    private javax.swing.JTextField r2c9;
    private javax.swing.JTextField r3c1;
    private javax.swing.JTextField r3c2;
    private javax.swing.JTextField r3c3;
    private javax.swing.JTextField r3c4;
    private javax.swing.JTextField r3c5;
    private javax.swing.JTextField r3c6;
    private javax.swing.JTextField r3c7;
    private javax.swing.JTextField r3c8;
    private javax.swing.JTextField r3c9;
    private javax.swing.JTextField r4c1;
    private javax.swing.JTextField r4c2;
    private javax.swing.JTextField r4c3;
    private javax.swing.JTextField r4c4;
    private javax.swing.JTextField r4c5;
    private javax.swing.JTextField r4c6;
    private javax.swing.JTextField r4c7;
    private javax.swing.JTextField r4c8;
    private javax.swing.JTextField r4c9;
    private javax.swing.JTextField r5c1;
    private javax.swing.JTextField r5c2;
    private javax.swing.JTextField r5c3;
    private javax.swing.JTextField r5c4;
    private javax.swing.JTextField r5c5;
    private javax.swing.JTextField r5c6;
    private javax.swing.JTextField r5c7;
    private javax.swing.JTextField r5c8;
    private javax.swing.JTextField r5c9;
    private javax.swing.JTextField r6c1;
    private javax.swing.JTextField r6c2;
    private javax.swing.JTextField r6c3;
    private javax.swing.JTextField r6c4;
    private javax.swing.JTextField r6c5;
    private javax.swing.JTextField r6c6;
    private javax.swing.JTextField r6c7;
    private javax.swing.JTextField r6c8;
    private javax.swing.JTextField r6c9;
    private javax.swing.JTextField r7c1;
    private javax.swing.JTextField r7c2;
    private javax.swing.JTextField r7c3;
    private javax.swing.JTextField r7c4;
    private javax.swing.JTextField r7c5;
    private javax.swing.JTextField r7c6;
    private javax.swing.JTextField r7c7;
    private javax.swing.JTextField r7c8;
    private javax.swing.JTextField r7c9;
    private javax.swing.JTextField r8c1;
    private javax.swing.JTextField r8c2;
    private javax.swing.JTextField r8c3;
    private javax.swing.JTextField r8c4;
    private javax.swing.JTextField r8c5;
    private javax.swing.JTextField r8c6;
    private javax.swing.JTextField r8c7;
    private javax.swing.JTextField r8c8;
    private javax.swing.JTextField r8c9;
    private javax.swing.JTextField r9c1;
    private javax.swing.JTextField r9c2;
    private javax.swing.JTextField r9c3;
    private javax.swing.JTextField r9c4;
    private javax.swing.JTextField r9c5;
    private javax.swing.JTextField r9c6;
    private javax.swing.JTextField r9c7;
    private javax.swing.JTextField r9c8;
    private javax.swing.JTextField r9c9;
    private javax.swing.JLabel results;
    private javax.swing.JButton rstrtBtn;
    private javax.swing.JButton sbmtBtn;
    // End of variables declaration//GEN-END:variables
}
